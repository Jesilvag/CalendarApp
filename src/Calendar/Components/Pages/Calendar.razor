@using Application.Requests
@using global::Calendar.DTOS
@inject MediatR.IMediator Mediator
<div>
    <InputDate @bind-Value="selectedDate" class="form-control"/>
</div>
<div>
    <button class="btn btn-primary" @onclick="()=>AddEvent()">Add</button>
</div>
<div>
   <table class="table">
       <thead>
           <tr>
               <th>Title</th>
               <th>Start Date</th>
               <th>End Date</th>
               <th>Location</th>
               <th>Description</th>
           </tr>
       </thead>
       <tbody>
           @foreach (var item in events)
           {
               <tr>
                   <td>@item.Title</td>
                   <td>@item.StartDate</td>
                   <td>@item.EndDate</td>
                   <td>@item.Location</td>
                   <td>@item.Description</td>
                   <td>
                       <button class="btn btn-danger" @onclick="()=>EditEvent(item)">Edit</button></td>
               </tr>
           }
       </tbody>
       </table>
</div>

<Modal @ref="modal" Title="Modal title">
    <BodyTemplate>
        Modal body text goes here.
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="() => CloseModal()">Close</Button>
        <Button Color="ButtonColor.Primary">Save changes</Button>
    </FooterTemplate>
</Modal>
@code {
    private Modal modal = default!;

    private DateOnly selectedDate = DateOnly.FromDateTime(DateTime.Now);
    private List<CalendarEvent> events = new List<CalendarEvent>();

    protected override Task OnInitializedAsync()
    {
        RefreshEvents();
        return base.OnInitializedAsync();
    }
    private async void CloseModal()
    {
        await modal.HideAsync();
    }
    private async void AddEvent()
    {
        await modal.ShowAsync();
       
       // var result = Mediator.Send(eventToAdd); 

    }

    private void EditEvent(CalendarEvent calendarEvent)
    {
        events.Remove(calendarEvent);
    }

    private void RefreshEvents()
    {
        events = new List<CalendarEvent>
        {
            new CalendarEvent
            {
                Title = "Meeting",
                StartDate = DateOnly.FromDateTime(DateTime.Now),
                EndDate = DateOnly.FromDateTime(DateTime.Now),
                Location = "Office",
                Description = "Meeting with the team"
            },
            new CalendarEvent
            {
                Title = "Lunch",
                StartDate =DateOnly.FromDateTime(DateTime.Now),
                EndDate = DateOnly.FromDateTime(DateTime.Now),
                Location = "Restaurant",
                Description = "Lunch with the team"
            }
        };
    }
}
